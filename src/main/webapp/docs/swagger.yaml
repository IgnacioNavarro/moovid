swagger: '2.0'
info:
  description: This is the documentation for the Moovid API. It provides some basic endpoints for taking advantage of some of the services offered in the webapp.
  version: "2.0.0"
  title: Moovid API
  # put the contact info for your development or API team
  contact:
    email: inavarroblazquez@gmail.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

host: moovid-271019.appspot.com
basePath: /api

# tags are used for organizing operations
tags:
- name: music
  description: Endpoints related to retrieving music tracks
- name: other
  description: Miscellaneous operations

paths:
  /getmp3:
    get:
      tags:
      - music
      summary: return the song currently stored in the server
      operationId: getMP3
      description: |
        returns the song currently stored in the server, with its id and metadata info.
      produces:
      - application/json
      responses:
        200:
          description: returns MP3
          schema:
             $ref: '#/definitions/MP3'
        404:
          description: couldn't find a song with the given id
  /searchmp3:
    post:
      tags:
      - music
      summary: search songs by their name and albumName
      operationId: serachMP3
      description: |
        filters songs.
      consumes:
      - aplication/json
      produces:
      - aplication/json
      parameters:
      - in: body
        name: name
        description: |
          Song title to search for.
        schema:
          type: string
          example: Heaven
      responses:
        200:
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/MP3'
          
        400:
          description: invalid input
  /uploadmp3:
    put:
      tags:
      - music
      summary: upload the current song to the repository
      operationId: uploadMP3
      description: |
        uploads the current song into your repository
      produces:
      - application/json
      parameters:
      - in: body
        name: metadata
        description: |
          MP3 metadata.
        schema:
          $ref: '#/definitions/Metadata'
      responses:
        204:
          description: Upload correct.

  /deletemp3:
    delete:
      tags:
      - music
      summary: upload the current song to the repository
      operationId: deleteMP3
      description: |
        delete the current song of your repository
      produces:
      - application/json
      parameters:
      - in: query
        name: id
        description: pass the id of the song to delete
        required: true
        type: string
      responses:
        204:
          description: MP3 deleted
        404:
          description: MP3 not found 
definitions:
  Metadata:
      type: object
      required:
      - name
      - albumName
      - author
      - URLCoverArt
      properties:
        name:
          type: string
          example: Heaven
        albumName:
          type: string
          example: Tim
        author:
          type: string
          example: Avicii
        URLCoverArt:
          type: string
          format: url
          example: http://actualidadjoven.es/wp-content/uploads/2019/06/gv5dlif8fcbjo9kqct9v.jpg
  MP3:
      type: object
      required:
      - id
      - metadata
      properties:
        id:
          type: string
          format: uuid
          example: WrHJGNdE7-
        metadata:
          $ref: '#/definitions/Metadata'